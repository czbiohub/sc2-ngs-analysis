params {
  outdir = 'results'
  tracedir = "${params.outdir}/pipeline_info"
  help = false

  ref = "$baseDir/data/MN908947.3.fa"
  ref_gb = "$baseDir/data/MN908947.3.gb"

  gisaid_names = false

  single_end = false
  qpcr_primers = "$baseDir/data/qpcr_primers.bed"

  samQualThreshold = 20

  minDepth = 10

  clades = "$baseDir/data/clades.tsv"

  // assumes about 20 mutations between 2 random samples
  // (this is an overestimate to increase sensitivity)
  bcftoolsCallTheta = 0.0006

  maxNs = 6000
  minLength = 25000

  kraken2_db = "s3://jackkamm/covidseq/kraken2_h+v_20200319/"

// Analysis params
  sample_vcfs = false

// Nextstrain data
  nextstrain_sequences = ""
  include_file = "https://raw.githubusercontent.com/nextstrain/ncov/master/config/include.txt"
  sample_metadata = false

// Output documentation
  name = false
  multiqc_config = "$baseDir/assets/multiqc_config.yaml"
  email = false
  email_on_fail = false
  maxMultiqcEmailFileSize = 25.MB
  plaintext_email = false
  monochrome_logs = false
  help = false
  igenomes_base = "./iGenomes"
  tracedir = "${params.outdir}/pipeline_info"
  awsqueue = false
  awsregion = 'eu-west-1'
  igenomesIgnore = false
  custom_config_version = 'master'
  custom_config_base = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
  hostnames = false
  config_profile_description = false
  config_profile_contact = false
  config_profile_url = false

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}

process {
  container = 'czbiohub/sc2-msspe'
}

// Profiles
profiles {
  conda { process.conda = "$baseDir/environment.yaml" }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  docker { docker.enabled = true }
  singularity { singularity.enabled = true }
  awsbatch { includeConfig 'conf/awsbatch.config' }
  benchmark { includeConfig 'conf/benchmark.config' }
  test { includeConfig 'conf/test.config' }
  test_awsbatch { includeConfig 'conf/test_awsbatch.config' }
  fasta_reads { includeConfig 'conf/fasta_reads.config' }
}

// Avoid this error:
// WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
// Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351, once this is established and works well, nextflow might implement this behavior as new default.
docker.runOptions = '-u \$(id -u):\$(id -g)'

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.svg"
}

manifest {
  name = 'czbiohub/sc2-ngs-analysis'
  author = 'Samantha Hao, Jack Kamm'
  homePage = 'https://github.com/czbiohub/sc2-ngs-analysis'
  description = 'Produce analysis files for genomes from sc2-msspe-bioinfo'
  mainScript = 'main.nf'
  nextflowVersion = '>=0.32.0'
  version = '1.0'
}